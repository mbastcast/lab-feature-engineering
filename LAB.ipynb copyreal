{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dbb526ab-8231-4be1-aeae-738feeb6a737",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import datetime\n",
    "import warnings\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "aa44b30e-a771-4cd8-8707-b0b6243d298b",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = pd.read_csv('learningSet.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "405e9007-62c4-47a4-b939-8176b579a2f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(95412, 481)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "86064222-1904-460b-b0d6-55336eef756b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Check for null values in all the columns\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d6569556-9d3e-44cd-bee9-8fb2433aaf2c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ODATEDW       0\n",
       "OSOURCE       0\n",
       "TCODE         0\n",
       "STATE         0\n",
       "ZIP           0\n",
       "           ... \n",
       "MDMAUD_R      0\n",
       "MDMAUD_F      0\n",
       "MDMAUD_A      0\n",
       "CLUSTER2    132\n",
       "GEOCODE2    132\n",
       "Length: 481, dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f1cd8344-ed6f-4f57-a793-f35455bb2cc7",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Exclude the following variables by looking at the definitions. Create a new empty list called drop_list. We will append this list and then drop all the columns in this list later:\n",
    "\n",
    "#OSOURCE - symbol definitions not provided, too many categories\n",
    "#ZIP CODE - we are including state already"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "764130bf-41cc-4d3a-a04e-37b922d916b0",
   "metadata": {},
   "outputs": [],
   "source": [
    "drop_list = ['OSOURCE', 'ZIP']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f57f195f-f26b-4e66-8777-8e4ebf01ee02",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Identify columns that over 85% missing values\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "48197ab8-3cc9-438f-9aa8-b62691100358",
   "metadata": {},
   "outputs": [],
   "source": [
    "nulls = data.isna().sum().sort_values(ascending = False)*100/len(data)\n",
    "nulls = nulls.reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "6711dd8a-4748-442e-aaa2-40d77b5e0be9",
   "metadata": {},
   "outputs": [],
   "source": [
    "nulls.columns = ['column_name', 'percent']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3591dcae-c70b-4316-8d83-8d849f7ff40e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>column_name</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>RDATE_5</td>\n",
       "      <td>99.990567</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>RAMNT_5</td>\n",
       "      <td>99.990567</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>RDATE_3</td>\n",
       "      <td>99.746363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>RAMNT_3</td>\n",
       "      <td>99.746363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>RDATE_4</td>\n",
       "      <td>99.705488</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>476</th>\n",
       "      <td>ETHC3</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>ETHC2</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>478</th>\n",
       "      <td>ETHC1</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479</th>\n",
       "      <td>HHD12</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>480</th>\n",
       "      <td>TPE11</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>481 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    column_name    percent\n",
       "0       RDATE_5  99.990567\n",
       "1       RAMNT_5  99.990567\n",
       "2       RDATE_3  99.746363\n",
       "3       RAMNT_3  99.746363\n",
       "4       RDATE_4  99.705488\n",
       "..          ...        ...\n",
       "476       ETHC3   0.000000\n",
       "477       ETHC2   0.000000\n",
       "478       ETHC1   0.000000\n",
       "479       HHD12   0.000000\n",
       "480       TPE11   0.000000\n",
       "\n",
       "[481 rows x 2 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nulls"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "e3d935a4-d9c6-44a6-a40a-a1a5319c866b",
   "metadata": {},
   "outputs": [],
   "source": [
    "nulls=nulls.query(\"percent > 85\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "522101c6-7f44-450e-a7d3-d907e5204c89",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>column_name</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>RDATE_5</td>\n",
       "      <td>99.990567</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>RAMNT_5</td>\n",
       "      <td>99.990567</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>RDATE_3</td>\n",
       "      <td>99.746363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>RAMNT_3</td>\n",
       "      <td>99.746363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>RDATE_4</td>\n",
       "      <td>99.705488</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>RAMNT_4</td>\n",
       "      <td>99.705488</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>RAMNT_6</td>\n",
       "      <td>99.186685</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>RDATE_6</td>\n",
       "      <td>99.186685</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>RAMNT_15</td>\n",
       "      <td>92.388798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>RDATE_15</td>\n",
       "      <td>92.388798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>RDATE_23</td>\n",
       "      <td>91.763091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>RAMNT_23</td>\n",
       "      <td>91.763091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>RDATE_20</td>\n",
       "      <td>91.732696</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>RAMNT_20</td>\n",
       "      <td>91.732696</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>RAMNT_7</td>\n",
       "      <td>90.677273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>RDATE_7</td>\n",
       "      <td>90.677273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>RAMNT_17</td>\n",
       "      <td>90.146942</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>RDATE_17</td>\n",
       "      <td>90.146942</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>RDATE_21</td>\n",
       "      <td>90.029556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>RAMNT_21</td>\n",
       "      <td>90.029556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>RAMNT_10</td>\n",
       "      <td>89.035970</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>RDATE_10</td>\n",
       "      <td>89.035970</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>RDATE_13</td>\n",
       "      <td>87.160944</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>RAMNT_13</td>\n",
       "      <td>87.160944</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>NUMCHLD</td>\n",
       "      <td>87.018404</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   column_name    percent\n",
       "0      RDATE_5  99.990567\n",
       "1      RAMNT_5  99.990567\n",
       "2      RDATE_3  99.746363\n",
       "3      RAMNT_3  99.746363\n",
       "4      RDATE_4  99.705488\n",
       "5      RAMNT_4  99.705488\n",
       "6      RAMNT_6  99.186685\n",
       "7      RDATE_6  99.186685\n",
       "8     RAMNT_15  92.388798\n",
       "9     RDATE_15  92.388798\n",
       "10    RDATE_23  91.763091\n",
       "11    RAMNT_23  91.763091\n",
       "12    RDATE_20  91.732696\n",
       "13    RAMNT_20  91.732696\n",
       "14     RAMNT_7  90.677273\n",
       "15     RDATE_7  90.677273\n",
       "16    RAMNT_17  90.146942\n",
       "17    RDATE_17  90.146942\n",
       "18    RDATE_21  90.029556\n",
       "19    RAMNT_21  90.029556\n",
       "20    RAMNT_10  89.035970\n",
       "21    RDATE_10  89.035970\n",
       "22    RDATE_13  87.160944\n",
       "23    RAMNT_13  87.160944\n",
       "24     NUMCHLD  87.018404"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nulls"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "00dbe8f6-04de-48d7-b932-eb3b794efa24",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      RDATE_5\n",
       "1      RAMNT_5\n",
       "2      RDATE_3\n",
       "3      RAMNT_3\n",
       "4      RDATE_4\n",
       "5      RAMNT_4\n",
       "6      RAMNT_6\n",
       "7      RDATE_6\n",
       "8     RAMNT_15\n",
       "9     RDATE_15\n",
       "10    RDATE_23\n",
       "11    RAMNT_23\n",
       "12    RDATE_20\n",
       "13    RAMNT_20\n",
       "14     RAMNT_7\n",
       "15     RDATE_7\n",
       "16    RAMNT_17\n",
       "17    RDATE_17\n",
       "18    RDATE_21\n",
       "19    RAMNT_21\n",
       "20    RAMNT_10\n",
       "21    RDATE_10\n",
       "22    RDATE_13\n",
       "23    RAMNT_13\n",
       "24     NUMCHLD\n",
       "Name: column_name, dtype: object"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nulls['column_name']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "89dc334a-44a1-4b41-9d84-34216e61c5a6",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Remove those columns from the dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "b681dd8c-b376-4d87-a6b3-1e2861103b07",
   "metadata": {},
   "outputs": [],
   "source": [
    "columns=['RDATE_5', 'RAMNT_5'\n",
    ",'RDATE_3'\n",
    ",      'RAMNT_3'\n",
    ",      'RDATE_4'\n",
    ",      'RAMNT_4'\n",
    ",      'RAMNT_6'\n",
    ",      'RDATE_6'\n",
    ",     'RAMNT_15'\n",
    ",     'RDATE_15'\n",
    ",    'RDATE_23'\n",
    ",    'RAMNT_23'\n",
    ",    'RDATE_20'\n",
    ",    'RAMNT_20'\n",
    ",     'RAMNT_7'\n",
    ",     'RDATE_7'\n",
    ",    'RAMNT_17'\n",
    ",    'RDATE_17'\n",
    ",    'RDATE_21'\n",
    ",    'RAMNT_21'\n",
    ",    'RAMNT_10'\n",
    ",    'RDATE_10'\n",
    ",    'RDATE_13'\n",
    ",    'RAMNT_13'\n",
    ",     'NUMCHLD']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "c90c3f22-8c04-4bb5-98a5-6b347f7310df",
   "metadata": {},
   "outputs": [],
   "source": [
    "data.drop(columns, inplace=True, axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "5fbf7b6d-1167-4025-a2d2-19afc77ebe18",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['RDATE_5',\n",
       " 'RAMNT_5',\n",
       " 'RDATE_3',\n",
       " 'RAMNT_3',\n",
       " 'RDATE_4',\n",
       " 'RAMNT_4',\n",
       " 'RAMNT_6',\n",
       " 'RDATE_6',\n",
       " 'RAMNT_15',\n",
       " 'RDATE_15',\n",
       " 'RDATE_23',\n",
       " 'RAMNT_23',\n",
       " 'RDATE_20',\n",
       " 'RAMNT_20',\n",
       " 'RAMNT_7',\n",
       " 'RDATE_7',\n",
       " 'RAMNT_17',\n",
       " 'RDATE_17',\n",
       " 'RDATE_21',\n",
       " 'RAMNT_21',\n",
       " 'RAMNT_10',\n",
       " 'RDATE_10',\n",
       " 'RDATE_13',\n",
       " 'RAMNT_13',\n",
       " 'NUMCHLD']"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "3f1f9c57-3d2d-446d-b8b0-2665c9eceb6e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['ODATEDW', 'OSOURCE', 'TCODE', 'STATE', 'ZIP', 'MAILCODE', 'PVASTATE',\n",
       "       'DOB', 'NOEXCH', 'RECINHSE',\n",
       "       ...\n",
       "       'TARGET_D', 'HPHONE_D', 'RFA_2R', 'RFA_2F', 'RFA_2A', 'MDMAUD_R',\n",
       "       'MDMAUD_F', 'MDMAUD_A', 'CLUSTER2', 'GEOCODE2'],\n",
       "      dtype='object', length=456)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "1f51bb15-39a3-46a9-bb11-fffd345dad65",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "F    51277\n",
      "M    39094\n",
      "      2957\n",
      "U     1715\n",
      "J      365\n",
      "C        2\n",
      "A        2\n",
      "Name: GENDER, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(data['GENDER'].value_counts())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "f294bb0b-3404-4fce-87a4-813fe0e683f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Reduce the number of categories in the column GENDER. The column should only have either \"M\" for males, \"F\" for females, and \"other\" for all the rest\n",
    "\n",
    "#Note that there are a few null values in the column. We will first replace those null values using the code below:\n",
    "data['GENDER'] = data['GENDER'].fillna('F')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "0167fa37-62ca-4fdc-8901-738b7ed11039",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "F    51277\n",
      "M    39094\n",
      "      2957\n",
      "U     1715\n",
      "J      365\n",
      "C        2\n",
      "A        2\n",
      "Name: GENDER, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(data['GENDER'].value_counts())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "961289d1-01ba-4914-8bc5-9ea2cd36bb57",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['GENDER'] = data['GENDER'].replace([\" \", \"U\", \"J\", \"C\", \"A\"],'OTHER')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "cef941ea-3066-48ad-a013-66d051b780f4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "F        51277\n",
      "M        39094\n",
      "OTHER     5041\n",
      "Name: GENDER, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(data['GENDER'].value_counts())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9dbf6179-c566-41b1-9ace-e8d1a35e9b0c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "6155b69b-0f06-4035-81af-28fba4ed75e9",
   "metadata": {},
   "source": [
    "**Lab | Feature engineering**\n",
    "In this lab, you will use learningSet.csv file which you have already cloned in the previous activities.\n",
    "Instructions\n",
    "Here we will work on cleaning some of the other columns in the dataset using the techniques that we used before in the lessons.\n",
    "\n",
    "Check for null values in the numerical columns.\n",
    "Use appropriate methods to clean the columns GEOCODE2, WEALTH1, ADI, DMA,and MSA.\n",
    "Use appropriate EDA technique where ever necessary."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "98377095-b761-4a1c-9d8a-547b458f5406",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RDATE_11    80672\n",
       "RAMNT_11    80672\n",
       "RAMNT_19    79535\n",
       "RDATE_19    79535\n",
       "RAMNT_9     78678\n",
       "            ...  \n",
       "HHD7            0\n",
       "HHD6            0\n",
       "HHD5            0\n",
       "HHD4            0\n",
       "TPE2            0\n",
       "Length: 456, dtype: int64"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isnull().sum().sort_values(ascending = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "dd92d571-831d-4ae9-9d88-0ce348b68262",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        C\n",
       "1        A\n",
       "2        C\n",
       "3        C\n",
       "4        A\n",
       "        ..\n",
       "95407    C\n",
       "95408    A\n",
       "95409    B\n",
       "95410    A\n",
       "95411    C\n",
       "Name: GEOCODE2, Length: 95412, dtype: object"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.GEOCODE2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "bc132182-a4ff-4823-af14-02207171f3c7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "A    34484\n",
       "B    28505\n",
       "D    16580\n",
       "C    15524\n",
       "       187\n",
       "Name: GEOCODE2, dtype: int64"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['GEOCODE2'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "e52ba6e9-c6af-43fe-9a33-680e449a72d0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "9.0    7585\n",
       "8.0    6793\n",
       "7.0    6198\n",
       "6.0    5825\n",
       "5.0    5280\n",
       "4.0    4810\n",
       "3.0    4237\n",
       "2.0    4085\n",
       "1.0    3454\n",
       "0.0    2413\n",
       "Name: WEALTH1, dtype: int64"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['WEALTH1'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "6ab451cf-6a5e-42f4-9b14-6e0941b6b24d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "13.0     7296\n",
       "51.0     4622\n",
       "65.0     3765\n",
       "57.0     2836\n",
       "105.0    2617\n",
       "         ... \n",
       "651.0       1\n",
       "103.0       1\n",
       "601.0       1\n",
       "161.0       1\n",
       "147.0       1\n",
       "Name: ADI, Length: 204, dtype: int64"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['ADI'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "7f22fad8-113d-4e19-86b3-47b1bf672c73",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "132"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['ADI'].isna().sum()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "e3d1901e-a7a6-4e55-9267-239b19b69926",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "803.0    7296\n",
       "602.0    4632\n",
       "807.0    3765\n",
       "505.0    2839\n",
       "819.0    2588\n",
       "         ... \n",
       "569.0       1\n",
       "554.0       1\n",
       "584.0       1\n",
       "552.0       1\n",
       "516.0       1\n",
       "Name: DMA, Length: 206, dtype: int64"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['DMA'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "2ad55da5-a937-4c46-8ca6-a62c3bd4aff0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0       21333\n",
       "4480.0     4606\n",
       "1600.0     4059\n",
       "2160.0     2586\n",
       "520.0      1685\n",
       "          ...  \n",
       "9140.0        1\n",
       "3200.0        1\n",
       "9280.0        1\n",
       "743.0         1\n",
       "8480.0        1\n",
       "Name: MSA, Length: 298, dtype: int64"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['MSA'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "1e5a1f84-194f-4935-9d89-8d36b85eb18d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(95412, 456)"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##current Status\n",
    "data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "8d613462-2eb8-4aef-b305-91c2f8cccdb0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ODATEDW</th>\n",
       "      <th>TCODE</th>\n",
       "      <th>DOB</th>\n",
       "      <th>AGE</th>\n",
       "      <th>INCOME</th>\n",
       "      <th>WEALTH1</th>\n",
       "      <th>HIT</th>\n",
       "      <th>MBCRAFT</th>\n",
       "      <th>MBGARDEN</th>\n",
       "      <th>MBBOOKS</th>\n",
       "      <th>...</th>\n",
       "      <th>FISTDATE</th>\n",
       "      <th>NEXTDATE</th>\n",
       "      <th>TIMELAG</th>\n",
       "      <th>AVGGIFT</th>\n",
       "      <th>CONTROLN</th>\n",
       "      <th>TARGET_B</th>\n",
       "      <th>TARGET_D</th>\n",
       "      <th>HPHONE_D</th>\n",
       "      <th>RFA_2F</th>\n",
       "      <th>CLUSTER2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>8901</td>\n",
       "      <td>0</td>\n",
       "      <td>3712</td>\n",
       "      <td>60.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>8911</td>\n",
       "      <td>9003.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>7.741935</td>\n",
       "      <td>95515</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>39.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>9401</td>\n",
       "      <td>1</td>\n",
       "      <td>5202</td>\n",
       "      <td>46.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>16</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>...</td>\n",
       "      <td>9310</td>\n",
       "      <td>9504.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>15.666667</td>\n",
       "      <td>148535</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>9001</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>9001</td>\n",
       "      <td>9101.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>7.481481</td>\n",
       "      <td>15078</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>60.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8701</td>\n",
       "      <td>0</td>\n",
       "      <td>2801</td>\n",
       "      <td>70.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8702</td>\n",
       "      <td>8711.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>6.812500</td>\n",
       "      <td>172556</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>41.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8601</td>\n",
       "      <td>0</td>\n",
       "      <td>2001</td>\n",
       "      <td>78.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>60</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7903</td>\n",
       "      <td>8005.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>6.864865</td>\n",
       "      <td>7112</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>26.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95407</th>\n",
       "      <td>9601</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>9602</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>184568</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>12.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95408</th>\n",
       "      <td>9601</td>\n",
       "      <td>1</td>\n",
       "      <td>5001</td>\n",
       "      <td>48.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>9603</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>122706</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95409</th>\n",
       "      <td>9501</td>\n",
       "      <td>1</td>\n",
       "      <td>3801</td>\n",
       "      <td>60.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>9410</td>\n",
       "      <td>9501.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>8.285714</td>\n",
       "      <td>189641</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>34.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95410</th>\n",
       "      <td>8601</td>\n",
       "      <td>0</td>\n",
       "      <td>4005</td>\n",
       "      <td>58.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>8612</td>\n",
       "      <td>8704.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>12.146341</td>\n",
       "      <td>4693</td>\n",
       "      <td>1</td>\n",
       "      <td>18.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>11.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95411</th>\n",
       "      <td>8801</td>\n",
       "      <td>2</td>\n",
       "      <td>1801</td>\n",
       "      <td>80.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8803</td>\n",
       "      <td>8809.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>96.794872</td>\n",
       "      <td>185114</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>12.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>95412 rows Ã— 382 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       ODATEDW  TCODE   DOB   AGE  INCOME  WEALTH1  HIT  MBCRAFT  MBGARDEN  \\\n",
       "0         8901      0  3712  60.0     NaN      NaN    0      NaN       NaN   \n",
       "1         9401      1  5202  46.0     6.0      9.0   16      0.0       0.0   \n",
       "2         9001      1     0   NaN     3.0      1.0    2      0.0       0.0   \n",
       "3         8701      0  2801  70.0     1.0      4.0    2      0.0       0.0   \n",
       "4         8601      0  2001  78.0     3.0      2.0   60      1.0       0.0   \n",
       "...        ...    ...   ...   ...     ...      ...  ...      ...       ...   \n",
       "95407     9601      1     0   NaN     NaN      NaN    0      NaN       NaN   \n",
       "95408     9601      1  5001  48.0     7.0      9.0    1      0.0       0.0   \n",
       "95409     9501      1  3801  60.0     NaN      NaN    0      NaN       NaN   \n",
       "95410     8601      0  4005  58.0     7.0      NaN    0      NaN       NaN   \n",
       "95411     8801      2  1801  80.0     5.0      8.0    3      0.0       0.0   \n",
       "\n",
       "       MBBOOKS  ...  FISTDATE  NEXTDATE  TIMELAG    AVGGIFT  CONTROLN  \\\n",
       "0          NaN  ...      8911    9003.0      4.0   7.741935     95515   \n",
       "1          3.0  ...      9310    9504.0     18.0  15.666667    148535   \n",
       "2          1.0  ...      9001    9101.0     12.0   7.481481     15078   \n",
       "3          0.0  ...      8702    8711.0      9.0   6.812500    172556   \n",
       "4          9.0  ...      7903    8005.0     14.0   6.864865      7112   \n",
       "...        ...  ...       ...       ...      ...        ...       ...   \n",
       "95407      NaN  ...      9602       NaN      NaN  25.000000    184568   \n",
       "95408      1.0  ...      9603       NaN      NaN  20.000000    122706   \n",
       "95409      NaN  ...      9410    9501.0      3.0   8.285714    189641   \n",
       "95410      NaN  ...      8612    8704.0      4.0  12.146341      4693   \n",
       "95411      0.0  ...      8803    8809.0      6.0  96.794872    185114   \n",
       "\n",
       "       TARGET_B  TARGET_D  HPHONE_D  RFA_2F  CLUSTER2  \n",
       "0             0       0.0         0       4      39.0  \n",
       "1             0       0.0         0       2       1.0  \n",
       "2             0       0.0         1       4      60.0  \n",
       "3             0       0.0         1       4      41.0  \n",
       "4             0       0.0         1       2      26.0  \n",
       "...         ...       ...       ...     ...       ...  \n",
       "95407         0       0.0         0       1      12.0  \n",
       "95408         0       0.0         1       1       2.0  \n",
       "95409         0       0.0         1       3      34.0  \n",
       "95410         1      18.0         1       4      11.0  \n",
       "95411         0       0.0         1       1      12.0  \n",
       "\n",
       "[95412 rows x 382 columns]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.select_dtypes(include=['number'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "1af45a3c-6d20-4cc4-8911-303e130c8726",
   "metadata": {},
   "outputs": [],
   "source": [
    "numerical=data.select_dtypes(include=['number'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "d484805c-4744-4ec9-84d9-83048fa3b419",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RDATE_11    80672\n",
       "RAMNT_11    80672\n",
       "RAMNT_19    79535\n",
       "RDATE_19    79535\n",
       "RAMNT_9     78678\n",
       "            ...  \n",
       "RHP4            0\n",
       "RHP3            0\n",
       "RHP2            0\n",
       "RHP1            0\n",
       "PEC1            0\n",
       "Length: 382, dtype: int64"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "numerical.isnull().sum().sort_values(ascending = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "14db23d2-b4c4-4d3d-82fe-e3564a1a9bcf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[8.901e+03, 0.000e+00, 3.712e+03, ..., 0.000e+00, 4.000e+00,\n",
       "        3.900e+01],\n",
       "       [9.401e+03, 1.000e+00, 5.202e+03, ..., 0.000e+00, 2.000e+00,\n",
       "        1.000e+00],\n",
       "       [9.001e+03, 1.000e+00, 0.000e+00, ..., 0.000e+00, 4.000e+00,\n",
       "        6.000e+01],\n",
       "       ...,\n",
       "       [9.501e+03, 1.000e+00, 3.801e+03, ..., 0.000e+00, 3.000e+00,\n",
       "        3.400e+01],\n",
       "       [8.601e+03, 0.000e+00, 4.005e+03, ..., 1.800e+01, 4.000e+00,\n",
       "        1.100e+01],\n",
       "       [8.801e+03, 2.000e+00, 1.801e+03, ..., 0.000e+00, 1.000e+00,\n",
       "        1.200e+01]])"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.feature_selection import VarianceThreshold\n",
    "selection = VarianceThreshold(threshold=(.9))\n",
    "# This drops the columns that have a variance less than this threshold\n",
    "selection.fit(numerical)\n",
    "temp = selection.transform(numerical)\n",
    "temp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "18ed0fa0-bfe5-4dad-8cb2-f9c25c9bce9a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>...</th>\n",
       "      <th>372</th>\n",
       "      <th>373</th>\n",
       "      <th>374</th>\n",
       "      <th>375</th>\n",
       "      <th>376</th>\n",
       "      <th>377</th>\n",
       "      <th>378</th>\n",
       "      <th>379</th>\n",
       "      <th>380</th>\n",
       "      <th>381</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>column_name</th>\n",
       "      <td>ODATEDW</td>\n",
       "      <td>TCODE</td>\n",
       "      <td>DOB</td>\n",
       "      <td>AGE</td>\n",
       "      <td>INCOME</td>\n",
       "      <td>WEALTH1</td>\n",
       "      <td>HIT</td>\n",
       "      <td>MBCRAFT</td>\n",
       "      <td>MBGARDEN</td>\n",
       "      <td>MBBOOKS</td>\n",
       "      <td>...</td>\n",
       "      <td>FISTDATE</td>\n",
       "      <td>NEXTDATE</td>\n",
       "      <td>TIMELAG</td>\n",
       "      <td>AVGGIFT</td>\n",
       "      <td>CONTROLN</td>\n",
       "      <td>TARGET_B</td>\n",
       "      <td>TARGET_D</td>\n",
       "      <td>HPHONE_D</td>\n",
       "      <td>RFA_2F</td>\n",
       "      <td>CLUSTER2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>variance</th>\n",
       "      <td>117959.930584</td>\n",
       "      <td>909809.748379</td>\n",
       "      <td>4546405.288371</td>\n",
       "      <td>277.691644</td>\n",
       "      <td>3.440828</td>\n",
       "      <td>7.5211</td>\n",
       "      <td>86.617457</td>\n",
       "      <td>0.220917</td>\n",
       "      <td>0.068683</td>\n",
       "      <td>2.788725</td>\n",
       "      <td>...</td>\n",
       "      <td>102651.251549</td>\n",
       "      <td>86586.321904</td>\n",
       "      <td>67.456551</td>\n",
       "      <td>115.991629</td>\n",
       "      <td>3056354531.68346</td>\n",
       "      <td>0.048182</td>\n",
       "      <td>19.622259</td>\n",
       "      <td>0.25</td>\n",
       "      <td>1.150778</td>\n",
       "      <td>352.107029</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>statement</th>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>...</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows Ã— 382 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                       0              1               2           3    \\\n",
       "column_name        ODATEDW          TCODE             DOB         AGE   \n",
       "variance     117959.930584  909809.748379  4546405.288371  277.691644   \n",
       "statement             True           True            True        True   \n",
       "\n",
       "                  4        5          6         7         8         9    ...  \\\n",
       "column_name    INCOME  WEALTH1        HIT   MBCRAFT  MBGARDEN   MBBOOKS  ...   \n",
       "variance     3.440828   7.5211  86.617457  0.220917  0.068683  2.788725  ...   \n",
       "statement        True     True       True     False     False      True  ...   \n",
       "\n",
       "                       372           373        374         375  \\\n",
       "column_name       FISTDATE      NEXTDATE    TIMELAG     AVGGIFT   \n",
       "variance     102651.251549  86586.321904  67.456551  115.991629   \n",
       "statement             True          True       True        True   \n",
       "\n",
       "                          376       377        378       379       380  \\\n",
       "column_name          CONTROLN  TARGET_B   TARGET_D  HPHONE_D    RFA_2F   \n",
       "variance     3056354531.68346  0.048182  19.622259      0.25  1.150778   \n",
       "statement                True     False       True     False      True   \n",
       "\n",
       "                    381  \n",
       "column_name    CLUSTER2  \n",
       "variance     352.107029  \n",
       "statement          True  \n",
       "\n",
       "[3 rows x 382 columns]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.DataFrame(data=(numerical.columns,selection.variances_,selection.get_support()), index=('column_name','variance','statement'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "979329b3-1d6f-496c-9889-5e48ea8d0ba5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>column_name</th>\n",
       "      <th>variance</th>\n",
       "      <th>statement</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>MBCRAFT</td>\n",
       "      <td>0.220917</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>MBGARDEN</td>\n",
       "      <td>0.068683</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>MBCOLECT</td>\n",
       "      <td>0.088411</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>MAGFAML</td>\n",
       "      <td>0.674042</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>MAGFEM</td>\n",
       "      <td>0.145094</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>MAGMALE</td>\n",
       "      <td>0.076394</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>PUBGARDN</td>\n",
       "      <td>0.2405</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>PUBCULIN</td>\n",
       "      <td>0.183028</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>PUBDOITY</td>\n",
       "      <td>0.530804</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>PUBPHOTO</td>\n",
       "      <td>0.006075</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>PUBOPP</td>\n",
       "      <td>0.771989</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>ETH6</td>\n",
       "      <td>0.46141</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187</th>\n",
       "      <td>TPE6</td>\n",
       "      <td>0.539863</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188</th>\n",
       "      <td>TPE7</td>\n",
       "      <td>0.483732</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>270</th>\n",
       "      <td>ANC5</td>\n",
       "      <td>0.500561</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>271</th>\n",
       "      <td>ANC6</td>\n",
       "      <td>0.284182</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>276</th>\n",
       "      <td>ANC11</td>\n",
       "      <td>0.750543</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>280</th>\n",
       "      <td>ANC15</td>\n",
       "      <td>0.150632</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>304</th>\n",
       "      <td>HC15</td>\n",
       "      <td>0.243664</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>312</th>\n",
       "      <td>MHUC2</td>\n",
       "      <td>0.751454</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>315</th>\n",
       "      <td>ADATE_2</td>\n",
       "      <td>0.000545</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>316</th>\n",
       "      <td>ADATE_3</td>\n",
       "      <td>0.00077</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>318</th>\n",
       "      <td>ADATE_5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>319</th>\n",
       "      <td>ADATE_6</td>\n",
       "      <td>0.00222</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>322</th>\n",
       "      <td>ADATE_9</td>\n",
       "      <td>0.131505</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323</th>\n",
       "      <td>ADATE_10</td>\n",
       "      <td>0.074789</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>324</th>\n",
       "      <td>ADATE_11</td>\n",
       "      <td>0.266821</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>325</th>\n",
       "      <td>ADATE_12</td>\n",
       "      <td>0.263264</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>326</th>\n",
       "      <td>ADATE_13</td>\n",
       "      <td>0.129611</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>327</th>\n",
       "      <td>ADATE_14</td>\n",
       "      <td>0.008552</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>328</th>\n",
       "      <td>ADATE_15</td>\n",
       "      <td>0.0</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>329</th>\n",
       "      <td>ADATE_16</td>\n",
       "      <td>0.021329</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>330</th>\n",
       "      <td>ADATE_17</td>\n",
       "      <td>0.073876</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>332</th>\n",
       "      <td>ADATE_19</td>\n",
       "      <td>0.086336</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>333</th>\n",
       "      <td>ADATE_20</td>\n",
       "      <td>0.00031</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>334</th>\n",
       "      <td>ADATE_21</td>\n",
       "      <td>0.066825</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>337</th>\n",
       "      <td>ADATE_24</td>\n",
       "      <td>0.004734</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>377</th>\n",
       "      <td>TARGET_B</td>\n",
       "      <td>0.048182</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>379</th>\n",
       "      <td>HPHONE_D</td>\n",
       "      <td>0.25</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    column_name  variance statement\n",
       "7       MBCRAFT  0.220917     False\n",
       "8      MBGARDEN  0.068683     False\n",
       "10     MBCOLECT  0.088411     False\n",
       "11      MAGFAML  0.674042     False\n",
       "12       MAGFEM  0.145094     False\n",
       "13      MAGMALE  0.076394     False\n",
       "14     PUBGARDN    0.2405     False\n",
       "15     PUBCULIN  0.183028     False\n",
       "17     PUBDOITY  0.530804     False\n",
       "19     PUBPHOTO  0.006075     False\n",
       "20       PUBOPP  0.771989     False\n",
       "42         ETH6   0.46141     False\n",
       "187        TPE6  0.539863     False\n",
       "188        TPE7  0.483732     False\n",
       "270        ANC5  0.500561     False\n",
       "271        ANC6  0.284182     False\n",
       "276       ANC11  0.750543     False\n",
       "280       ANC15  0.150632     False\n",
       "304        HC15  0.243664     False\n",
       "312       MHUC2  0.751454     False\n",
       "315     ADATE_2  0.000545     False\n",
       "316     ADATE_3   0.00077     False\n",
       "318     ADATE_5       0.0     False\n",
       "319     ADATE_6   0.00222     False\n",
       "322     ADATE_9  0.131505     False\n",
       "323    ADATE_10  0.074789     False\n",
       "324    ADATE_11  0.266821     False\n",
       "325    ADATE_12  0.263264     False\n",
       "326    ADATE_13  0.129611     False\n",
       "327    ADATE_14  0.008552     False\n",
       "328    ADATE_15       0.0     False\n",
       "329    ADATE_16  0.021329     False\n",
       "330    ADATE_17  0.073876     False\n",
       "332    ADATE_19  0.086336     False\n",
       "333    ADATE_20   0.00031     False\n",
       "334    ADATE_21  0.066825     False\n",
       "337    ADATE_24  0.004734     False\n",
       "377    TARGET_B  0.048182     False\n",
       "379    HPHONE_D      0.25     False"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "removed_columns = pd.DataFrame(data=(numerical.columns,selection.variances_,selection.get_support()), index=('column_name','variance','statement')).T\n",
    "removed_columns[removed_columns['statement'] == False]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "6123aa69-e510-44f5-9652-d02fb9d1af63",
   "metadata": {},
   "outputs": [],
   "source": [
    "### by variance i would drop a lot of columns, not the smartest thing to do "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "7260dfcd-e471-4a88-8ddf-101470b23691",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Use appropriate methods to clean the columns GEOCODE2, WEALTH1, ADI, DMA,and MSA.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "8e4967f1-25d6-45ef-a76c-dba622102199",
   "metadata": {},
   "outputs": [],
   "source": [
    "##GEOCODE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "c0d18ec4-4a25-40a4-9bb5-82cc96ea10f3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "A    34484\n",
       "B    28505\n",
       "D    16580\n",
       "C    15524\n",
       "       187\n",
       "Name: GEOCODE2, dtype: int64"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['GEOCODE2'].value_counts()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "2a687b7a-66fd-4047-ba78-b5350ce5f4ba",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "132"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['GEOCODE2'].isna().sum()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "9508c425-1198-4da8-bd7c-5d3875608b91",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['C', 'A', 'D', 'B', ' ', nan], dtype=object)"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.GEOCODE2.unique()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "25a68591-8ebb-441c-99c5-33d8bfc2e3dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "##filling with the most common category"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "649d5d96-0ecb-472e-8f14-e35eeecc13c8",
   "metadata": {},
   "outputs": [],
   "source": [
    "nulls_fill = data['GEOCODE2'].value_counts(sorted).reset_index().iloc[0,0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "c6c5007c-6bf9-4dd7-b785-7bd70723b65e",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['GEOCODE2'] = data['GEOCODE2'].fillna(nulls_fill)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "53b96ef1-38f2-491f-97e7-6ac7ff136617",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'A'"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nulls_fill"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d03e5fc3-4df5-4db4-bc5b-e6daa98d01ff",
   "metadata": {},
   "outputs": [],
   "source": [
    "##now WEALTH"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "5164378a-054d-446d-9e7e-3b23f5b88462",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "9.0    7585\n",
       "8.0    6793\n",
       "7.0    6198\n",
       "6.0    5825\n",
       "5.0    5280\n",
       "4.0    4810\n",
       "3.0    4237\n",
       "2.0    4085\n",
       "1.0    3454\n",
       "0.0    2413\n",
       "Name: WEALTH1, dtype: int64"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.WEALTH1.value_counts()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "26b33701-9755-4082-aa22-6c7452baafc5",
   "metadata": {},
   "outputs": [],
   "source": [
    "mean_W= data.WEALTH1.mean()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "19da8482-b19c-444f-bd89-5696e7821318",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['WEALTH1'] = data['WEALTH1'].fillna(mean_W)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "299a13ef-143c-4c14-a834-3f2236af07b2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([5.3456985, 9.       , 1.       , 4.       , 2.       , 6.       ,\n",
       "       0.       , 5.       , 8.       , 3.       , 7.       ])"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.WEALTH1.unique()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "5c3631dc-527d-47e6-a5fd-11be460bf5d5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5.345699    44732\n",
       "9.000000     7585\n",
       "8.000000     6793\n",
       "7.000000     6198\n",
       "6.000000     5825\n",
       "5.000000     5280\n",
       "4.000000     4810\n",
       "3.000000     4237\n",
       "2.000000     4085\n",
       "1.000000     3454\n",
       "0.000000     2413\n",
       "Name: WEALTH1, dtype: int64"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['WEALTH1'].value_counts()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "cf17be93-dd96-4fa2-bfbc-d828025cf62e",
   "metadata": {},
   "outputs": [],
   "source": [
    "##ADI, DMA,and MSA."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "5c8ef3b0-6e94-4288-9943-622043bc3d3d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(132, 132, 132)"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.ADI.isna().sum(), data.DMA.isna().sum(), data.MSA.isna().sum()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "7e17a867-4012-40fa-99aa-e4068e81cd44",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(data[data['ADI'].isna()==False]['ADI']) \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "6d240bd5-365b-4eb4-9cc5-bb3ed228ec82",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['ADI'] = data['ADI'].fillna(np.mean(data['ADI']))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "7e4e02c6-c910-44d5-b7c8-bc379722c000",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['DMA'] = data['DMA'].fillna(np.mean(data['DMA']))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "76d0ebf3-604b-4e45-af2c-caf9936d9168",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['MSA'] = data['MSA'].fillna(np.mean(data['MSA']))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "af222110-92e5-4f5f-be1c-beae09b97b45",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
